{"version":3,"file":"main.c3161f46e7e9a7a449b3.hot-update.js","mappings":";;;;;;;;;;;;;;;;;;;;;;;AACA;AACA;AACA;AACA;;AAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AAEA;;AAEA;AACA;AACA;AACA;AACA;AAAA;AAAA;AADA;AAHA;;AAQA;AAAA;AAAA;AAAA;AAAA;AAAA;;AAAA;AAEA;AACA;AACA;AADA;AAKA;AAAA;AAAA;AAAA;AAAA;AAAA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AC5BA;AACA;;AAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AAAA;AAAA;AADA;AAAA;AAAA;AAAA;AAAA;AAAA;AAKA;AAPA;AASA;AACA;AACA;AACA;AAHA;AAMA;AACA;AACA;AAFA","sources":["webpack://editor-library/./src/components/Button.stories.js","webpack://editor-library/./src/components/Button.js"],"sourcesContent":["\n    /* eslint-disable */\n    // @ts-nocheck\n    // @ts-ignore\n    var __STORY__ = \"import React from 'react';\\r\\n\\r\\nimport Button from './Button';\\r\\n\\r\\nexport default {\\r\\n  title: 'Example/Button',\\r\\n  component: Button,\\r\\n  argTypes: {\\r\\n    backgroundColor: { control: 'color' },\\r\\n  },\\r\\n};\\r\\n\\r\\nconst Template = (args) => <Button {...args} />;\\r\\n\\r\\nexport const Default = Template.bind({});\\r\\nDefault.args = {\\r\\n  label: 'My Button',\\r\\n};\";\n    // @ts-ignore\n    var __LOCATIONS_MAP__ = {\"Default\":{\"startLoc\":{\"col\":17,\"line\":13},\"endLoc\":{\"col\":47,\"line\":13},\"startBody\":{\"col\":17,\"line\":13},\"endBody\":{\"col\":47,\"line\":13}}};\n    \nimport React from 'react';\r\n\r\nimport Button from './Button';\r\n\r\nexport default {\r\n  title: 'Example/Button',\r\n  component: Button,\r\n  argTypes: {\r\n    backgroundColor: { control: 'color' },\r\n  },\r\n};\r\n\r\nconst Template = (args) => <Button {...args} />;\r\n\r\nexport const Default = Template.bind({});\r\nDefault.args = {\r\n  label: 'My Button',\r\n};\n\n\nDefault.parameters = { storySource: { source: \"(args) => <Button {...args} />\" }, ...Default.parameters };","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\nexport default function Button({ label, backgroundColor, onClick }) {\r\n  return (\r\n    <button onClick={onClick}\r\n    style={backgroundColor && { backgroundColor }}>\r\n      {label}\r\n    </button>\r\n  );\r\n}\r\n\r\nButton.propTypes = {\r\n  backgroundColor: PropTypes.string,\r\n  label: PropTypes.string.isRequired,\r\n  onClick: PropTypes.func,\r\n};\r\n\r\nButton.defaultProps = {\r\n  backgroundColor: null,\r\n  onClick: undefined,\r\n};"],"names":[],"sourceRoot":""}